from Crypto.Util.number import *
from gmpy2 import iroot


n = 56857358946783738817465975297711204069935415016419932538392922530218921201217352346494361968035470184308357037387164930109496691365401965670237349367799774405061235025947852274083877022468072607753900481316564650009744632767993278947752127202134753913008582254000854930780954253903124752186965795809304941831
e = 65537
y = 54129553452548020723616698595285587704861441821682175273940519683163638301529404696982989366696324064594396066797701089154672560828427185057071836681043144874565113154501014407283089885871224438534781940829559886228137883794445606551971734932755694582218804069846658338752506228081788324414191778266867960340

nn = 56857358946783738817465975297711204069935415016419932538392922530218921201217352346494361968035470184308357037387164930109496691365401965670237349367805332556208545324190423359112543995138089627600000504956531406110700016755090783444147649357626603184673602899015609448577621960908326053341685493162553923683
e = 65537
yy = 54904189490273836503960200711350004725920576885881641688173306274762202573095421887773308652425204453956153996353028898080968805699877265273638393099277340479488951192104954084070323022216313855632506411275865181376283939786423085736432815359399351894579725901517442688632028924262380544819047494361593650323

m = nn - n
for dp in range(1, 1000):
    for dq in range(1, 1000):
        a = dq
        b = (dp * dq - m)
        c = n * dp
        p = (-b + int(iroot(b**2 - 4*a*c, 2)[0])) // (2*a)
        if n % p == 0:
            q = n // p
            pp = p + dp
            qq = q + dq
            assert pp*qq == nn
            break
    else:
        continue
    break

phi = (p - 1)*(q - 1)
phiphi = (pp - 1)*(qq - 1)
d = inverse(e, phi)
dd = inverse(e, phiphi)
flag = pow(y, d, n)
flagflag = pow(yy, dd, nn)
print(long_to_bytes(flag)+long_to_bytes(flagflag))

