from Crypto.Util.number import *
from gmpy2 import iroot


n = 64414792452427718911986932441553436816626401084380657717798358055434339573434961605231227578618585513383897564711074669513458752925075656362537949861388966134924470728722835934540124994827012556099810106350638808586915703856472940956304781958201089858096795413130937427776007253050974724733233386595366308577
e = 65537
ct = 55649699971178395381138954928232439540415304790564103711084567262622772941823862470845546292054028044490900059844534115630312324261584060632181354181554318612138229965392219581738809422394603059633667800626633613344592015253525808554376359327834031163907836005008155179908813774256755903876788700718424417268

def f(n):
    i = iroot(n, 2)[0] + 1
    j = iroot(i**2 - n, 2)[0]
    Z = i**2 - n - j**2
    
    return int(i + j), int(i - j)

p, q = f(n)

assert p * q == n

phi = (p - 1)*(q - 1)

d = inverse(e, phi)
m = pow(ct, d, n)
print(m)
print(long_to_bytes(m))
