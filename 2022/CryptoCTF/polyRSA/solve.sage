from Crypto.Util.number import *
from output import n, enc

# var("x")
# f = 2*x + 1
# ans = solve(f, x)

# print(ans)

var("k")
p = k**6 + 7*k**4 - 40*k**3 + 12*k**2 - 114*k + 31377
q = k**5 - 8*k**4 + 19*k**3 - 313*k**2 - 14*k + 14011
equation_n = p*q - Integer(n)

ans = solve(equation_n, k)

print(ans)

# [
# k == 9291098683758154336,
# 0 == k^10 + 9291098683758154328*k^9 + 86324514751332507920686687503130366234*k^8 + 802049585382166841998797853373790060322000370555575090215*k^7 + 7451921847053023768225791831401263435499059361781241836134508670465093422691*k^6 + 69236541264622983424006730523155879854111614713486384736869676500540289724779018131011262449026*k^5 + 643283537411705739751736602834996325555556834314766539690152253142027898956134694820609321236161627923321040921675*k^4 + 5976810827729188630557003621311995095648335703397589627197814668131183051160398213244933578473106932230716966500448221348826337474499*k^3 + 55531139214586149410521383296416802755946101975555744055346569351360363638236354907882521264232259991518366939660445808824854432664131661252107706348901*k^2 + 515945294464232201156694574309806985471737970756746958780781342974259664394077452718213507503073859888399779867038881640508092154646016311891191492085593466304817012333463*k + 4793698646287841156910010476220865523641319167177591330077441729473577919395673114900462923172768714948061701902781637527558646065216237796741226323404297567989092589459699751716409449309036
# ]

k = 9291098683758154336
p = k**6 + 7*k**4 - 40*k**3 + 12*k**2 - 114*k + 31377
q = k**5 - 8*k**4 + 19*k**3 - 313*k**2 - 14*k + 14011
e = 31337
phi = (p - 1)*(q - 1)
d = inverse(e, phi)
flag = long_to_bytes(pow(enc, d, n))
print(flag)


